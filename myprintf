#include "myprintf.h"
#include "stm32f10x.h"
#include "usart.h"
#include "stdarg.h"
/**************字符转换*************/
int itoa(int num, char *str, int radix)
{
        char string[] = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        char* ptr = str;
        int temp;
        int i;
        int j;        
        if (num==0)
        {
                *ptr++ = 0x30;
                *ptr = 0;
                return 1;
        }
        if(num < 0)
        {
            *ptr++ = '-';
            num *= -1;
        }
        while (num)
        {
                *ptr++ = string[num % radix];
                num /= radix;
                if (num < radix)
                {
                        *ptr++ = string[num];
                        *ptr = '\0';
                        break;
                }
        }
        j = ptr - str - 1;
        for (i = 0; i < (ptr - str) / 2; i++)
        {
                temp = str[i];
                str[i] = str[j];
                str[j--] = temp;
        }
        return (int)(ptr - str);
}
/******************没有使用库函数*************/
void ComPrint(const char* Data,...)
{ 
    const char *s;
    int d;
    char buf[16];
    va_list ap;
    va_start(ap, Data);
    while(*Data!=0)
    {                          
        if(*Data == '\n')
        {
            USART_SendData(USART1, 0x0d);
            while(USART_GetFlagStatus(USART1, USART_FLAG_TXE)==RESET);
            USART_SendData(USART1, 0x0a);
            while(USART_GetFlagStatus(USART1, USART_FLAG_TXE)==RESET);
            Data++;
        } 
        else if(*Data=='%')
        {
            switch (*++Data)
							{
               case 's': 
                  s = va_arg(ap, const char *); 
                  for ( ; *s; s++) 
						      {
                     USART_SendData(USART1,*s);
                     while(USART_GetFlagStatus(USART1, USART_FLAG_TXE)==RESET); 
                  }
                  Data++;
                  break;
               case 'd': 
                  d = va_arg(ap, int);
                  itoa(d, buf, 10);
                  for (s = buf; *s; s++) 
							    {
                     USART_SendData(USART1,*s);
                     while(USART_GetFlagStatus(USART1, USART_FLAG_TXE)==RESET); 
                  }
                  Data++;
                  break;
               case 'x':
                  d = va_arg(ap, int);
                  itoa(d, buf, 16);
                  for (s = buf; *s; s++) 
							    {
                     USART_SendData(USART1,*s);
                     while(USART_GetFlagStatus(USART1, USART_FLAG_TXE)==RESET); 
                  }
                  Data++; 
                  break;
               default:
                  Data++;
                  break;
            }  
        }
        else
        { 
            USART_SendData(USART1, *Data++);
            while(USART_GetFlagStatus(USART1, USART_FLAG_TXE)==RESET);
        }
    }
}

void cli_puts(char* sz) 
{

    char c;
    while ((c = *sz++) != '\0')
		{
      while (USART_GetFlagStatus(USART1, USART_FLAG_TXE) == RESET);
      USART_SendData(USART1, (uint16_t)c);
    }
}
/***********使用了库函数的printf函数***************/
void cli_printf(const char* fmt, ...)     //定义可变参数
{
  static char sz[1024];                   //定义数组
  va_list ap;                             //定义一个list变量
  va_start(ap, fmt);                      //初始化ap
  sprintf(sz, fmt, ap);                   //将ap中的字符串给到sz
  cli_puts(sz);                           //串口发送
  va_end(ap);                             //结束
}



