#include "timer.h"
#include "stm32f10x.h"
#include "pid.h"
#include "GT.h"
#include "pwm.h"
#include "lcdshow.h"
#include "lcd.h"
#include "delay.h"

extern u32 UP;
u16 moto;
extern pid_typedef pid;
u8 t= 46;                               //x坐标的位置
/************定时器2的初始化*************/
void TIM2_Int_Init(u16 arr,u16 psc)
{
TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
NVIC_InitTypeDef NVIC_InitStructure;
RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE); //①时钟 TIM2 使能
//定时器 TIM2 初始化
TIM_TimeBaseStructure.TIM_Period = arr; //设置自动重装载寄存器周期的值 
TIM_TimeBaseStructure.TIM_Prescaler =psc; //设置时钟频率除数的预分频值
TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1; //设置时钟分割
TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up; //TIM 向上计数
TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure); //②初始化 TIM2
TIM_ITConfig(TIM2,TIM_IT_Update,ENABLE ); //③允许更新中断
//中断优先级 NVIC 设置
NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn; //TIM2 中断
NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0; //先占优先级 0 级
NVIC_InitStructure.NVIC_IRQChannelSubPriority = 3; //从优先级 3 级
NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; //IRQ 通道被使能
NVIC_Init(&NVIC_InitStructure); //④初始化 NVIC 寄存器
TIM_Cmd(TIM2, ENABLE); //⑤使能 TIM2
}
void TIM2_IRQHandler(void) //TIM2 中断
{
	TIM_ClearITPendingBit(TIM2, TIM_IT_Update );   //清除中断标志位
	pid.ActualSpeed = UP*2*60*50/334;    
	UP = 0;
	lcdshow(t++,pid.ActualSpeed);
	if(t>160)
	{
		t = 46;	
		LCD_Fill(46,1,160,218,WHITE);              //清屏
		TIM_SetCompare2(TIM3,set_pwm(pid.SetSpeed));//给pwm输出值
	}
	moto = PID_realize(pid.SetSpeed);
	TIM_SetCompare2(TIM3,set_pwm(moto));
//	TIM_SetCompare2(TIM3,2000);

}
